plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'checkstyle'
}
//idea {
//	module {
//		downloadJavadoc=true
//		downloadSources=true
//	}
//}

group = 'com.image-classification'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'com.github.vladimir-bukhtoyarov:bucket4j-core:7.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'com.h2database:h2:2.1.214'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'com.mysql:mysql-connector-j'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.easymock:easymock:3.1'
	implementation 'io.rest-assured:rest-assured:4.5.1'

	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
}


checkstyle {
	toolVersion = '8.12'
	ignoreFailures = false
	configFile = file("${rootProject.rootDir}/gradle/static-code-analysis/checkstyle/checkstyle.xml")
}

tasks.named('test') {
	useJUnitPlatform()
}
